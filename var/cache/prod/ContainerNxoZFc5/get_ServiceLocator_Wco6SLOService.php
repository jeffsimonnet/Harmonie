<?php

namespace ContainerNxoZFc5;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_Wco6SLOService extends App_KernelProdContainer
{
    /*
     * Gets the private '.service_locator.Wco6SLO' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.Wco6SLO'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'exception' => ['privates', '.errored..service_locator.Wco6SLO.Throwable', NULL, 'Cannot autowire service ".service_locator.Wco6SLO": it references interface "Throwable" but no such service exists. Did you create a class that implements this interface?'],
            'logger' => ['privates', '.errored..service_locator.Wco6SLO.Symfony\\Component\\HttpKernel\\Log\\DebugLoggerInterface', NULL, 'Cannot autowire service ".service_locator.Wco6SLO": it references interface "Symfony\\Component\\HttpKernel\\Log\\DebugLoggerInterface" but no such service exists. You should maybe alias this interface to one of these existing services: "monolog.logger", "monolog.logger.request", "monolog.logger.console", "monolog.logger.cache", "monolog.logger.http_client", "monolog.logger.translation", "monolog.logger.php", "monolog.logger.router", "monolog.logger.security", "monolog.logger.doctrine".'],
            'slugger' => ['privates', 'slugger', 'getSluggerService', true],
        ], [
            'exception' => 'Throwable',
            'logger' => 'Symfony\\Component\\HttpKernel\\Log\\DebugLoggerInterface',
            'slugger' => '?',
        ]);
    }
}
