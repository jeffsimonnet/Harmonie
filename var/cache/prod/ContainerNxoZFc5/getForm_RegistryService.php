<?php

namespace ContainerNxoZFc5;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getForm_RegistryService extends App_KernelProdContainer
{
    /*
     * Gets the private 'form.registry' shared service.
     *
     * @return \Symfony\Component\Form\FormRegistry
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['form.registry'] = new \Symfony\Component\Form\FormRegistry([0 => new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Form\\ContactType' => ['privates', 'App\\Form\\ContactType', 'getContactTypeService', true],
            'App\\Form\\Custom\\BlogCategoryType' => ['privates', 'App\\Form\\Custom\\BlogCategoryType', 'getBlogCategoryTypeService', true],
            'App\\Form\\Custom\\CiviliteType' => ['privates', 'App\\Form\\Custom\\CiviliteType', 'getCiviliteTypeService', true],
            'App\\Form\\Custom\\DeleteButtonType' => ['privates', 'App\\Form\\Custom\\DeleteButtonType', 'getDeleteButtonTypeService', true],
            'App\\Form\\Custom\\PageHeroType' => ['privates', 'App\\Form\\Custom\\PageHeroType', 'getPageHeroTypeService', true],
            'App\\Form\\Custom\\PageMetaType' => ['privates', 'App\\Form\\Custom\\PageMetaType', 'getPageMetaTypeService', true],
            'App\\Form\\Custom\\PageSelectType' => ['privates', 'App\\Form\\Custom\\PageSelectType', 'getPageSelectTypeService', true],
            'App\\Form\\Custom\\PageSlugType' => ['privates', 'App\\Form\\Custom\\PageSlugType', 'getPageSlugTypeService', true],
            'App\\Form\\Custom\\PageStatusType' => ['privates', 'App\\Form\\Custom\\PageStatusType', 'getPageStatusTypeService', true],
            'App\\Form\\Custom\\PageTypeSelectType' => ['privates', 'App\\Form\\Custom\\PageTypeSelectType', 'getPageTypeSelectTypeService', true],
            'App\\Form\\Custom\\ReCaptchaSubmitType' => ['privates', 'App\\Form\\Custom\\ReCaptchaSubmitType', 'getReCaptchaSubmitTypeService', true],
            'App\\Form\\Custom\\RealisationCategoryType' => ['privates', 'App\\Form\\Custom\\RealisationCategoryType', 'getRealisationCategoryTypeService', true],
            'App\\Form\\Custom\\SlideshowType' => ['privates', 'App\\Form\\Custom\\SlideshowType', 'getSlideshowTypeService', true],
            'App\\Form\\Custom\\StaticComparatifType' => ['privates', 'App\\Form\\Custom\\StaticComparatifType', 'getStaticComparatifTypeService', true],
            'App\\Form\\Custom\\StaticFeaturesType' => ['privates', 'App\\Form\\Custom\\StaticFeaturesType', 'getStaticFeaturesTypeService', true],
            'App\\Form\\Custom\\StaticHeroType' => ['privates', 'App\\Form\\Custom\\StaticHeroType', 'getStaticHeroTypeService', true],
            'App\\Form\\Custom\\StaticPaveType' => ['privates', 'App\\Form\\Custom\\StaticPaveType', 'getStaticPaveTypeService', true],
            'App\\Form\\Custom\\StaticPavesType' => ['privates', 'App\\Form\\Custom\\StaticPavesType', 'getStaticPavesTypeService', true],
            'App\\Form\\Custom\\StaticPortletsType' => ['privates', 'App\\Form\\Custom\\StaticPortletsType', 'getStaticPortletsTypeService', true],
            'App\\Form\\Custom\\StaticProduitsType' => ['privates', 'App\\Form\\Custom\\StaticProduitsType', 'getStaticProduitsTypeService', true],
            'App\\Form\\Custom\\StaticPromiseType' => ['privates', 'App\\Form\\Custom\\StaticPromiseType', 'getStaticPromiseTypeService', true],
            'App\\Form\\Custom\\StaticTexteType' => ['privates', 'App\\Form\\Custom\\StaticTexteType', 'getStaticTexteTypeService', true],
            'App\\Form\\Custom\\TagsListeType' => ['privates', 'App\\Form\\Custom\\TagsListeType', 'getTagsListeTypeService', true],
            'App\\Form\\Custom\\ZoneSelectType' => ['privates', 'App\\Form\\Custom\\ZoneSelectType', 'getZoneSelectTypeService', true],
            'App\\Form\\PageType' => ['privates', 'App\\Form\\PageType', 'getPageTypeService', true],
            'App\\Form\\ZoneType' => ['privates', 'App\\Form\\ZoneType', 'getZoneTypeService', true],
            'Doctrine\\Bundle\\MongoDBBundle\\Form\\Type\\DocumentType' => ['privates', 'form.type.mongodb_document', 'getForm_Type_MongodbDocumentService', true],
            'FM\\ElfinderBundle\\Form\\Type\\ElFinderType' => ['privates', 'fm_elfinder.form.type', 'getFmElfinder_Form_TypeService', true],
            'FOS\\CKEditorBundle\\Form\\Type\\CKEditorType' => ['privates', 'fos_ck_editor.form.type', 'getFosCkEditor_Form_TypeService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => ['privates', 'form.type.choice', 'getForm_Type_ChoiceService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ColorType' => ['privates', 'form.type.color', 'getForm_Type_ColorService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => ['services', 'form.type.file', 'getForm_Type_FileService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => ['privates', 'form.type.form', 'getForm_Type_FormService', true],
        ], [
            'App\\Form\\ContactType' => '?',
            'App\\Form\\Custom\\BlogCategoryType' => '?',
            'App\\Form\\Custom\\CiviliteType' => '?',
            'App\\Form\\Custom\\DeleteButtonType' => '?',
            'App\\Form\\Custom\\PageHeroType' => '?',
            'App\\Form\\Custom\\PageMetaType' => '?',
            'App\\Form\\Custom\\PageSelectType' => '?',
            'App\\Form\\Custom\\PageSlugType' => '?',
            'App\\Form\\Custom\\PageStatusType' => '?',
            'App\\Form\\Custom\\PageTypeSelectType' => '?',
            'App\\Form\\Custom\\ReCaptchaSubmitType' => '?',
            'App\\Form\\Custom\\RealisationCategoryType' => '?',
            'App\\Form\\Custom\\SlideshowType' => '?',
            'App\\Form\\Custom\\StaticComparatifType' => '?',
            'App\\Form\\Custom\\StaticFeaturesType' => '?',
            'App\\Form\\Custom\\StaticHeroType' => '?',
            'App\\Form\\Custom\\StaticPaveType' => '?',
            'App\\Form\\Custom\\StaticPavesType' => '?',
            'App\\Form\\Custom\\StaticPortletsType' => '?',
            'App\\Form\\Custom\\StaticProduitsType' => '?',
            'App\\Form\\Custom\\StaticPromiseType' => '?',
            'App\\Form\\Custom\\StaticTexteType' => '?',
            'App\\Form\\Custom\\TagsListeType' => '?',
            'App\\Form\\Custom\\ZoneSelectType' => '?',
            'App\\Form\\PageType' => '?',
            'App\\Form\\ZoneType' => '?',
            'Doctrine\\Bundle\\MongoDBBundle\\Form\\Type\\DocumentType' => '?',
            'FM\\ElfinderBundle\\Form\\Type\\ElFinderType' => '?',
            'FOS\\CKEditorBundle\\Form\\Type\\CKEditorType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ColorType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => '?',
        ]), ['Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.form.transformation_failure_handling'] ?? $container->load('getForm_TypeExtension_Form_TransformationFailureHandlingService'));
            yield 1 => ($container->privates['form.type_extension.form.http_foundation'] ?? $container->load('getForm_TypeExtension_Form_HttpFoundationService'));
            yield 2 => ($container->privates['form.type_extension.form.validator'] ?? $container->load('getForm_TypeExtension_Form_ValidatorService'));
            yield 3 => ($container->privates['form.type_extension.upload.validator'] ?? $container->load('getForm_TypeExtension_Upload_ValidatorService'));
            yield 4 => ($container->privates['form.type_extension.csrf'] ?? $container->load('getForm_TypeExtension_CsrfService'));
        }, 5), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RepeatedType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.repeated.validator'] ?? ($container->privates['form.type_extension.repeated.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension()));
        }, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.submit.validator'] ?? ($container->privates['form.type_extension.submit.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension()));
        }, 1)], new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_guesser.validator'] ?? $container->load('getForm_TypeGuesser_ValidatorService'));
            yield 1 => ($container->privates['form.type_guesser.doctrine.mongodb'] ?? $container->load('getForm_TypeGuesser_Doctrine_MongodbService'));
        }, 2))], new \Symfony\Component\Form\ResolvedFormTypeFactory());
    }
}
